{"version":3,"sources":["Books/Book/Book.jsx","Books/Books.jsx","Shared/config.js","Shared/ApiGateway.js","Books/Books.model.js","Books/Books.ctrl.js","index.js"],"names":["Book","_ref","book","react_default","a","createElement","visibleName","Books","books","onBookAdd","map","i","key","onClick","API_BASE","ApiGateway","get","_callee","path","response","dto","regenerator_default","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","post","_callee2","payload","_context2","method","headers","Content-Type","body","JSON","stringify","booksModel","BooksModel","_this","this","Object","classCallCheck","getBooks","asyncToGenerator","mark","booksDto","httpGateway","addBook","_ref3","_ref2","name","author","bookAddDto","status","_x","apply","arguments","BooksController","isAdded","newBook","alert","runInAction","push","t0","console","debug","makeAutoObservable","_this2","_this2$books","toConsumableArray","_callee3","_context3","loadData","b","App","observer","controller","useEffect","init","load","booksList","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.acdc984a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Book({ book }) {\r\n    return (\r\n        <div>\r\n            {book.visibleName}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Book from './Book/Book';\r\n\r\nexport default function Books({ books, onBookAdd }) {\r\n\r\n    return (\r\n        <div>\r\n            {books.map((book, i) => <Book book={book} key={i} />)}\r\n            <button\r\n                onClick={onBookAdd}\r\n            >\r\n                Add\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const API_BASE = \"https://tdd.demo.reaktivate.com/v1/books/postnikov\";\n","import { API_BASE } from \"./config\";\n\nexport default class ApiGateway {\n  get = async (path) => {\n    const response = await fetch(`${API_BASE}${path}`);\n    const dto = response.json();\n    return dto;\n  };\n  post = async (path, payload) => {\n    const response = await fetch(`${API_BASE}${path}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(payload)\n    });\n    const dto = response.json();\n    return dto;\n  };\n}\n","import ApiGateway from \"../Shared/ApiGateway.js\";\n\nclass BooksModel {\n  constructor() {\n    this.httpGateway = new ApiGateway();\n  }\n\n  getBooks = async () => {\n    const booksDto = await this.httpGateway.get(\"/\");\n    return booksDto;\n  };\n\n  addBook = async ({ name, author }) => {\n    const bookAddDto = await this.httpGateway.post(\"/\", { name, author });\n    return bookAddDto && bookAddDto.status === \"ok\";\n  };\n}\n\nconst booksModel = new BooksModel();\nexport default booksModel;\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport booksModel from \"./Books.model\";\r\n\r\nexport default class BooksController {\r\n    books = [];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const books = await booksModel.getBooks();\r\n            runInAction(() => this.books.push(...books))\r\n        } catch (e) {\r\n            console.debug(\"ERROR:\", e);\r\n        }\r\n    }\r\n\r\n    async init() {\r\n        await this.loadData()\r\n    }\r\n\r\n    get booksList() {\r\n        return this.books.map(b => ({ visibleName: `${b.name}:${b.author}` }))\r\n    }\r\n\r\n    addBook = async () => {\r\n        let isAdded = false;\r\n        try {\r\n            const newBook = {\r\n                name: \"x_name\",\r\n                author: \"x_author\"\r\n            };\r\n            await booksModel.addBook(newBook);\r\n            alert(\"New Book Added Successfuly...\")\r\n            isAdded = true\r\n            runInAction(() => this.books.push(newBook))\r\n        } catch (e) {\r\n            console.debug(\"ERROR:\", e);\r\n            alert(\"New Book Add Failed...\")\r\n        }\r\n        return isAdded;\r\n\r\n    }\r\n}\r\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { observer } from \"mobx-react\";\nimport Books from \"./Books/Books\";\nimport BooksController from \"./Books/Books.ctrl\";\nimport \"./styles.css\";\n\nconst App = observer(({ controller }) => {\n  useEffect(() => {\n    const load = async () => await controller.init()\n    load();\n  }, [controller]);\n\n  return (\n    <Books\n      books={controller.booksList}\n      onBookAdd={controller.addBook}\n    />\n  );\n});\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App controller={new BooksController()} />, rootElement);\n"],"sourceRoot":""}